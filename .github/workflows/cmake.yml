name: CMake

on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - run: |
        echo "release_name=$(date +'%y.%m%d')" >> $GITHUB_OUTPUT
        echo "release_full_name=$(date +'%y.%m%d-%H%M')" >> $GITHUB_OUTPUT
        echo "release_branch=$(git branch --show-current)" >> $GITHUB_OUTPUT
        echo "FILE_VERSION=$release_branch-$release_full_name" >> $GITHUB_OUTPUT
      name: "Set current date as env variable"
      id: version  # this is used on variable path

    - name: Build
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      # working-directory: ~/XCVario
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12

      run:
        touch $PWD/main/Version.h;
        echo "#define CIPHER_KEY \"${{ secrets.AHRS_CIPHER_KEY }}\"" >$PWD/main/cipherkey.h;
        mkdir -p artifacts; touch $PWD/artifacts/sensor.bin; touch $PWD/artifacts/sensor.elf;
        gzip $PWD/artifacts/sensor-${{ steps.version.outputs.FILE_VERSION }}.elf;
        ls artifacts/*;

    - name: Upload binary
      uses: actions/upload-artifact@v3
      with:
        name: XCVario-${{ steps.version.outputs.FILE_VERSION }}
        path: artifacts/sensor-${{ steps.version.outputs.FILE_VERSION }}.bin
     
    - name: Upload ELF
      uses: actions/upload-artifact@v3
      with:
        name: XCVario-${{ steps.version.outputs.FILE_VERSION }}
        path: artifacts/sensor-${{ steps.version.outputs.FILE_VERSION }}.elf.gz

    - name: "Create Release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: "Release ${{ steps.version.outputs.release_name }}"
        prerelease: false
        draft: true
        files: |
          artifacts/sensor-${{ steps.version.outputs.FILE_VERSION }}.bin
          artifacts/sensor-${{ steps.version.outputs.FILE_VERSION }}.elf.gz
